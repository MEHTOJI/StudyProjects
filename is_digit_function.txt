/*
В этой программе реализована функция is_value, которая прверяет введенный массив char на то,
является ли он числовым типом данных. Функция пропустит (сработает с) отрицательными числами
и с числами ч плавающей точкой. При проверке используется установленный фвкт того, что в ASCII
символам 0-9 соотвествуют значения 49-57. Системное ограничение - максимальная длянна входной
строки - 100 символов.
*/


#include <iostream>
#include <fstream>
#include <string>
#include <cmath>
using namespace std;

void is_value(char* a) {
	if (!(((int)(a[0]) >= 48 && (int)(a[0]) <= 57) || a[0] == '-')) {// 1й символ строки может быть '-' или целым числом 0-9
		throw exception("You inputed non-digit type");
	}
	int point_counter = 0;                                  // Инициализируем переменную для подсета символов '.' в строке
	int i = 1;                                              // считаем с 1 т.к. 1й символ мы уже обработали
	while (a[i] != '\0') {
		if (a[i] == '.') {                                  // пересчитываем количество символов '.' в строке
			point_counter++;
			if (point_counter > 1) {                        // если при очередном увеличени счетчика точек он больше 1 -
															//сразу кидаем exception
				throw exception("You inputed non-digit type");
			}
		}
		i++;
	}

	i = 1;                                                  // повторно используем итератор i
	while (a[i] != '\0') {                                  // цикл проверки оставшихся символов до '\0'
		if (a[i] == '.') { i++; }                           // т.к.мы уже учли момент плавающей точки - теперь встречая
															// ее в программе - мы ее "игнорируем" (оператор continue) 

		if (!((int)(a[i]) >= 48 && (int)(a[i]) <= 57)) {
			throw exception("You inputed non-digit type");
		}
		i++;
	}
	cout << "pass! size: " << sizeof(stod(a)) << endl;
}

int main() {
	char* a = new char[101];
	cin >> a;
	try {
		is_value(a);
		double d_a = stod(a);
		cout << d_a << endl;
	}
	catch (exception& ex) { cout << ex.what() << endl; }

	delete[]a;
	return 0;
}
